/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LibrarianPackage;

import config.Config;
import config.Session;
import java.awt.Color;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Calendar;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author SCC
 */
public class EditLoanBooks extends javax.swing.JFrame {
    
    int lbookid;

    /**
     * Creates new form EditLoanBooks
     */
    public EditLoanBooks() {
        initComponents();
    }
    
    Color hover = new Color(0,85,255);  
    Color defbutton = new Color(210,255,255);
    
    Border empty = BorderFactory.createEmptyBorder();
    
    void resetButtonColor(JButton button){
        button.setBackground(defbutton);
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        editDrtn = new javax.swing.JComboBox<>();
        editPenalty = new javax.swing.JComboBox<>();
        editStat = new javax.swing.JComboBox<>();
        editloanbook = new javax.swing.JButton();
        canceledit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(210, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Loaned Books");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 280, 40));

        editDrtn.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editDrtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duration", "3 Days", "5 Days", "7 Days" }));
        editDrtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        editDrtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDrtnActionPerformed(evt);
            }
        });
        jPanel1.add(editDrtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 320, 40));

        editPenalty.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editPenalty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Penalty", "None", "3 Days Ban", "5 Days Ban", "Blacklisted" }));
        editPenalty.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.add(editPenalty, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 320, 40));

        editStat.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editStat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Status", "Loaned", "Returned" }));
        editStat.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.add(editStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 320, 40));

        editloanbook.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        editloanbook.setText("Edit");
        editloanbook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editloanbookMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editloanbookMouseExited(evt);
            }
        });
        editloanbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editloanbookActionPerformed(evt);
            }
        });
        jPanel1.add(editloanbook, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 110, 40));

        canceledit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        canceledit.setText("Cancel");
        canceledit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                canceleditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                canceleditMouseExited(evt);
            }
        });
        canceledit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canceleditActionPerformed(evt);
            }
        });
        jPanel1.add(canceledit, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 110, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void editDrtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDrtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editDrtnActionPerformed

    private void editloanbookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editloanbookMouseEntered
        editloanbook.setBackground(hover);
    }//GEN-LAST:event_editloanbookMouseEntered

    private void editloanbookMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editloanbookMouseExited
        editloanbook.setBackground(defbutton);
    }//GEN-LAST:event_editloanbookMouseExited

    private void editloanbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editloanbookActionPerformed
        Config conf = new Config();
    boolean isValid = true;
    StringBuilder errorMessages = new StringBuilder();

    // Get selected values
    String loanDuration = editDrtn.getSelectedItem().toString().trim(); // e.g., "5 Days"
    String penalty = editPenalty.getSelectedItem().toString().trim();
    String loanStatus = editStat.getSelectedItem().toString().trim();

    // Validate Duration
    if (editDrtn.getSelectedIndex() == 0) {
        editDrtn.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Please select a loan duration.\n");
        isValid = false;
    } else {
        editDrtn.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

    // Validate Penalty
    if (editPenalty.getSelectedIndex() == 0) {
        editPenalty.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Please select a penalty.\n");
        isValid = false;
    } else {
        editPenalty.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

    // Validate Loan Status
    if (editStat.getSelectedIndex() == 0) {
        editStat.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Please select the loan status.\n");
        isValid = false;
    } else {
        editStat.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

    // Show validation errors if any
    if (!isValid) {
        JOptionPane.showMessageDialog(null, errorMessages.toString(), "Validation Errors", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
    Connection conn = conf.getConnection();

    LocalDate today = LocalDate.now();
    LocalDate loanedDate = null;
    LocalDate dueDate = null;
    LocalDate returnDate = null;

    int daysToAdd = Integer.parseInt(loanDuration.split(" ")[0]);

    // Fetch existing loaned_date (if exists)
    String loanedDateQuery = "SELECT loaned_date FROM loanedbooks_tbl WHERE lb_id = ?";
    PreparedStatement dateStmt = conn.prepareStatement(loanedDateQuery);
    dateStmt.setInt(1, lbookid);
    ResultSet rs = dateStmt.executeQuery();

    if (loanStatus.equalsIgnoreCase("Loaned")) {
        // New loan approval
        loanedDate = today;
        dueDate = loanedDate.plusDays(daysToAdd);
    } else if (loanStatus.equalsIgnoreCase("Returned")) {
        returnDate = today;

        // Keep original loaned_date to calculate due_date again
        if (rs.next()) {
            Date loanedDateSql = rs.getDate("loaned_date");
            if (loanedDateSql != null) {
                loanedDate = loanedDateSql.toLocalDate();
                dueDate = loanedDate.plusDays(daysToAdd);
            }
        }
    } else {
        // Just update duration/penalty/status without changing dates
        if (rs.next()) {
            Date loanedDateSql = rs.getDate("loaned_date");
            if (loanedDateSql != null) {
                loanedDate = loanedDateSql.toLocalDate();
                dueDate = loanedDate.plusDays(daysToAdd);
            }
        }
    }

    // Prepare SQL Update with conditional fields
    String updateQuery = "UPDATE loanedbooks_tbl SET loan_duration = ?, penalty = ?, status = ?, due_date = ?, loaned_date = ?, return_date = ? WHERE lb_id = ?";
    PreparedStatement ps = conn.prepareStatement(updateQuery);
    ps.setString(1, loanDuration);
    ps.setString(2, penalty);
    ps.setString(3, loanStatus);
    ps.setDate(4, dueDate != null ? Date.valueOf(dueDate) : null);
    ps.setDate(5, loanedDate != null ? Date.valueOf(loanedDate) : null);
    ps.setDate(6, returnDate != null ? Date.valueOf(returnDate) : null);
    ps.setInt(7, lbookid);

    int rows = ps.executeUpdate();
    if (rows > 0) 
    {
                // Log action
                Session sess = Session.getInstance();
                String actions = "Updated Loans Successfully! ID: " + lbookid;

                PreparedStatement logPst = conn.prepareStatement("INSERT INTO logs (u_id, act_performed, date_performed) VALUES (?, ?, ?)");
                logPst.setString(1, sess.getUid());
                logPst.setString(2, actions);
                logPst.setTimestamp(3, Timestamp.valueOf(LocalDateTime.now()));
                logPst.executeUpdate();

                JOptionPane.showMessageDialog(null, "Loans updated successfully!");

                // Optionally, go back to Librarians Dashboard page
                LibrarianDB ldb = new LibrarianDB();
                this.dispose();
                ldb.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Update failed. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "SQL Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editloanbookActionPerformed

    private void canceleditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceleditMouseEntered
        canceledit.setBackground(hover);
    }//GEN-LAST:event_canceleditMouseEntered

    private void canceleditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceleditMouseExited
        canceledit.setBackground(defbutton);
    }//GEN-LAST:event_canceleditMouseExited

    private void canceleditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canceleditActionPerformed
        LibrarianDB ldb = new LibrarianDB();
        this.dispose();
        ldb.setVisible(true);
    }//GEN-LAST:event_canceleditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditLoanBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditLoanBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditLoanBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditLoanBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditLoanBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton canceledit;
    public javax.swing.JComboBox<String> editDrtn;
    public javax.swing.JComboBox<String> editPenalty;
    public javax.swing.JComboBox<String> editStat;
    private javax.swing.JButton editloanbook;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
