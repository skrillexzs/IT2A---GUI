/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LibrarianPackage;

import config.Config;
import config.Session;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 *
 * @author SCC
 */
public class UpdateBook extends javax.swing.JFrame {
    
    int bookId;

    /**
     * Creates new form UpdateBook
     */
    public UpdateBook() {
        initComponents();
    }
    
    Color hover = new Color(153,153,153);  
    Color defbutton = new Color(102,102,102);  
    
    Border empty = BorderFactory.createEmptyBorder();
    
    void resetButtonColor(JButton button){
        button.setBackground(defbutton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        editBtitle = new javax.swing.JTextField();
        editBauthor = new javax.swing.JTextField();
        editDatePub = new javax.swing.JTextField();
        editBcon = new javax.swing.JComboBox<>();
        editBstat = new javax.swing.JComboBox<>();
        editbook = new javax.swing.JButton();
        canceledit = new javax.swing.JButton();
        editBgenre = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(210, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Book in Catalogue");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 280, 40));

        editBtitle.setBackground(new java.awt.Color(153, 204, 255));
        editBtitle.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editBtitle.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Title", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12))); // NOI18N
        jPanel1.add(editBtitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 320, 50));

        editBauthor.setBackground(new java.awt.Color(153, 204, 255));
        editBauthor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editBauthor.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Author", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12))); // NOI18N
        editBauthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBauthorActionPerformed(evt);
            }
        });
        jPanel1.add(editBauthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 320, 50));

        editDatePub.setBackground(new java.awt.Color(153, 204, 255));
        editDatePub.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editDatePub.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Date Published", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12))); // NOI18N
        jPanel1.add(editDatePub, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 320, 50));

        editBcon.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editBcon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Condition", "New", "Old", "Replacement Required" }));
        editBcon.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        editBcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBconActionPerformed(evt);
            }
        });
        jPanel1.add(editBcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 320, 40));

        editBstat.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editBstat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Status", "Available", "Loaned", "Unavailable" }));
        editBstat.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.add(editBstat, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 320, 40));

        editbook.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        editbook.setText("Edit");
        editbook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editbookMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editbookMouseExited(evt);
            }
        });
        editbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbookActionPerformed(evt);
            }
        });
        jPanel1.add(editbook, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 480, 110, 40));

        canceledit.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        canceledit.setText("Cancel");
        canceledit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                canceleditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                canceleditMouseExited(evt);
            }
        });
        canceledit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canceleditActionPerformed(evt);
            }
        });
        jPanel1.add(canceledit, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 480, 110, 40));

        editBgenre.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        editBgenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Genre", "Horror", "Science Fiction", "Romance", "Documentary" }));
        editBgenre.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.add(editBgenre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 320, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void editBauthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBauthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editBauthorActionPerformed

    private void editBconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBconActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editBconActionPerformed

    private void editbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbookActionPerformed
        Config conf = new Config();
        boolean isValid = true;
        StringBuilder errorMessages = new StringBuilder();

        // Get trimmed input values
        String bookTitle = editBtitle.getText().trim();
        String bookGenre = editBgenre.getSelectedItem().toString().trim();
        String bookAuthor = editBauthor.getText().trim();
        String datePublish = editDatePub.getText().trim();
        String bookCondition = editBcon.getSelectedItem().toString().trim();                     
        String bookStatus = editBstat.getSelectedItem().toString().trim();

     // Validate Food Name
     if (bookTitle.isEmpty()) {
         editBtitle.setBorder(BorderFactory.createLineBorder(Color.RED));
         errorMessages.append("Book title is required.\n");
         isValid = false;
     } else {
         editBtitle.setBorder(BorderFactory.createLineBorder(Color.GRAY));
     }

     // Validate Book Genre
    if (editBgenre.getSelectedIndex() == 0) {
         editBgenre.setBorder(BorderFactory.createLineBorder(Color.RED));
         errorMessages.append("Please select the book's genre.\n");
         isValid = false;
     } else {
         editBgenre.setBorder(BorderFactory.createLineBorder(Color.GRAY));
     }
    
    // Validate Book Author
    if (bookAuthor.isEmpty()) {
        editBauthor.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Book Author is required.\n");
        isValid = false;
    } else {
        editBauthor.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }
    
    // Validate Date Published
    if (datePublish.isEmpty()) {
        editDatePub.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Published date is required.\n");
        isValid = false;
    } else {
        editDatePub.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

     // Validate Category
     if (editBcon.getSelectedIndex() == 0) {
         editBcon.setBorder(BorderFactory.createLineBorder(Color.RED));
         errorMessages.append("Please select the appropriate book condition.\n");
         isValid = false;
     } else {
         editBcon.setBorder(BorderFactory.createLineBorder(Color.GRAY));
     }

     // Validate Status
     if (editBstat.getSelectedIndex() == 0) {
         editBstat.setBorder(BorderFactory.createLineBorder(Color.RED));
         errorMessages.append("Please select the book's status.\n");
         isValid = false;
     } else {
         editBstat.setBorder(BorderFactory.createLineBorder(Color.GRAY));
     }

// Show validation errors
if (!isValid) {
    JOptionPane.showMessageDialog(null, errorMessages.toString(), "Validation Errors", JOptionPane.ERROR_MESSAGE);
    return;
}

// Insert into database
    try {
        Connection conn = conf.getConnection();

        String sql = "UPDATE books SET b_title = ?, b_genre = ?, b_author = ?, date_published = ?, b_condition = ?, b_status = ? WHERE b_id = ?";
    PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, bookTitle);
        pst.setString(2, bookGenre);
        pst.setString(3, bookAuthor);
        pst.setString(4, datePublish);
        pst.setString(5, bookCondition);
        pst.setString(6, bookStatus);
        pst.setInt(7, bookId);

    int rows = pst.executeUpdate();
    if (rows > 0) {
            // Log action
        Session sess = Session.getInstance();
        String actions = "Updated Books Successfully! ID: " + bookId;

        PreparedStatement logPst = conn.prepareStatement("INSERT INTO logs (u_id, act_performed, date_performed) VALUES (?, ?, ?)");
        logPst.setString(1, sess.getUid());
        logPst.setString(2, actions);
        logPst.setTimestamp(3, Timestamp.valueOf(LocalDateTime.now()));
        logPst.executeUpdate();

        JOptionPane.showMessageDialog(null, "Books updated successfully!");

        // Optionally, go back to foods page
        BooksDB bdb = new BooksDB();
        this.dispose();
        bdb.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(null, "Update failed. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
    }

} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "SQL Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
}
    }//GEN-LAST:event_editbookActionPerformed

    private void editbookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editbookMouseEntered
        editbook.setBackground(hover);
    }//GEN-LAST:event_editbookMouseEntered

    private void editbookMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editbookMouseExited
        editbook.setBackground(defbutton);
    }//GEN-LAST:event_editbookMouseExited

    private void canceleditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canceleditActionPerformed
        BooksDB bdb = new BooksDB();
        bdb.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_canceleditActionPerformed

    private void canceleditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceleditMouseEntered
        canceledit.setBackground(hover);
    }//GEN-LAST:event_canceleditMouseEntered

    private void canceleditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canceleditMouseExited
        canceledit.setBackground(defbutton);
    }//GEN-LAST:event_canceleditMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton canceledit;
    public javax.swing.JTextField editBauthor;
    public javax.swing.JComboBox<String> editBcon;
    javax.swing.JComboBox<String> editBgenre;
    public javax.swing.JComboBox<String> editBstat;
    public javax.swing.JTextField editBtitle;
    public javax.swing.JTextField editDatePub;
    private javax.swing.JButton editbook;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
