/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LibrarianPackage;

import config.Config;
import config.Session;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;

/**
 *
 * @author SCC
 */
public class BookEntry extends javax.swing.JFrame {

    /**
     * Creates new form BookEntry
     */
    public BookEntry() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bTitle = new javax.swing.JTextField();
        bGenre = new javax.swing.JTextField();
        bAuthor = new javax.swing.JTextField();
        datePub = new javax.swing.JTextField();
        bCondition = new javax.swing.JComboBox<>();
        bStatus = new javax.swing.JComboBox<>();
        addbook = new javax.swing.JButton();
        canceladd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(210, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Book to Catalogue");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 280, 40));

        bTitle.setBackground(new java.awt.Color(153, 204, 255));
        bTitle.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        bTitle.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Title", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12))); // NOI18N
        jPanel1.add(bTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 320, 50));

        bGenre.setBackground(new java.awt.Color(153, 204, 255));
        bGenre.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        bGenre.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Genre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12))); // NOI18N
        jPanel1.add(bGenre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 320, 50));

        bAuthor.setBackground(new java.awt.Color(153, 204, 255));
        bAuthor.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        bAuthor.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Author", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12))); // NOI18N
        bAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAuthorActionPerformed(evt);
            }
        });
        jPanel1.add(bAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 320, 50));

        datePub.setBackground(new java.awt.Color(153, 204, 255));
        datePub.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        datePub.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Date Published", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 12))); // NOI18N
        jPanel1.add(datePub, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 320, 50));

        bCondition.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        bCondition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Condition", "New", "Old", "Replacement Required" }));
        bCondition.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        bCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConditionActionPerformed(evt);
            }
        });
        jPanel1.add(bCondition, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 320, 40));

        bStatus.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        bStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Status", "Available", "Loaned" }));
        bStatus.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.add(bStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 320, 40));

        addbook.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        addbook.setText("Add");
        addbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbookActionPerformed(evt);
            }
        });
        jPanel1.add(addbook, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 480, 110, 40));

        canceladd.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        canceladd.setText("Cancel");
        jPanel1.add(canceladd, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 480, 110, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bAuthorActionPerformed

    private void bConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConditionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bConditionActionPerformed

    private void addbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbookActionPerformed
        Config conf = new Config();
        boolean isValid = true;
        StringBuilder errorMessages = new StringBuilder();

    // Get input values
    String bookTitle = bTitle.getText().trim();
    String bookGenre = bGenre.getText().trim();
    String bookAuthor = bAuthor.getText().trim();
    String datePublish = datePub.getText().trim();
    String bookCondition = bCondition.getSelectedItem().toString().trim();                     
    String bookStatus = bStatus.getSelectedItem().toString().trim();

    // Validate Book Title
    if (bookTitle.isEmpty()) {
        bTitle.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Book title is required.\n");
        isValid = false;
    } else {
        bTitle.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

    // Validate Book Genre
    if (bookGenre.isEmpty()) {
        bGenre.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Book genre is required.\n");
        isValid = false;
    } else {
        bGenre.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }
    
    // Validate Book Author
    if (bookAuthor.isEmpty()) {
        bAuthor.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Book Author is required.\n");
        isValid = false;
    } else {
        bAuthor.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }
    
    // Validate Date Published
    if (datePublish.isEmpty()) {
        datePub.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Published date is required.\n");
        isValid = false;
    } else {
        datePub.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

    // Validate Book COndition
    if (bCondition.getSelectedIndex() == 0) {
        bCondition.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Please select the appropriate book condition.\n");
        isValid = false;
    } else {
        bCondition.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

    // Validate Book Status
    if (bStatus.getSelectedIndex() == 0) {
        bStatus.setBorder(BorderFactory.createLineBorder(Color.RED));
        errorMessages.append("Please select the book's status.\n");
        isValid = false;
    } else {
        bStatus.setBorder(BorderFactory.createLineBorder(Color.GRAY));
    }

    // Show validation errors if any
    if (!isValid) {
        JOptionPane.showMessageDialog(null, errorMessages.toString(), "Validation Errors", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Insert into database
    try {
        Connection conn = conf.getConnection();

        String sql = "INSERT INTO books (b_title, b_genre, b_author, date_published, b_condition, b_status) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
        pst.setString(1, bookTitle);
        pst.setString(2, bookGenre);
        pst.setString(3, bookAuthor);
        pst.setString(4, datePublish);
        pst.setString(5, bookCondition);
        pst.setString(6, bookStatus);

        int rows = pst.executeUpdate();

        if (rows > 0) {
            ResultSet keys = pst.getGeneratedKeys();
            int lastId = -1;
            if (keys.next()) {
                lastId = keys.getInt(1);
            }

            // Log the action
            Session sess = Session.getInstance();
            String userId = sess.getUid();

            if (userId != null && !userId.trim().isEmpty()) {
                String actions = "New Book added! ID: " + lastId;

                PreparedStatement logPst = conn.prepareStatement(
                    "INSERT INTO logs (u_id, act_performed, date_performed) VALUES (?, ?, ?)"
                );
                logPst.setString(1, userId);
                logPst.setString(2, actions);
                logPst.setTimestamp(3, Timestamp.valueOf(LocalDateTime.now()));
                logPst.executeUpdate();
            } else {
                System.out.println("Warning: Session UID is null or empty. Log not inserted.");
            }

            JOptionPane.showMessageDialog(null, "New book added successfully!");

            // Clear inputs
            bTitle.setText("");
            bGenre.setText("");
            bAuthor.setText("");
            datePub.setText("");
            bCondition.setSelectedIndex(0);
            bStatus.setSelectedIndex(0);

            // Redirect to FoodsDB
            BooksDB bdb = new BooksDB();
            this.dispose();
            bdb.setVisible(true);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "SQL Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_addbookActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookEntry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookEntry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbook;
    private javax.swing.JTextField bAuthor;
    private javax.swing.JComboBox<String> bCondition;
    private javax.swing.JTextField bGenre;
    private javax.swing.JComboBox<String> bStatus;
    private javax.swing.JTextField bTitle;
    private javax.swing.JButton canceladd;
    private javax.swing.JTextField datePub;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
